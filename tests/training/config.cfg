[nlp]
lang = "fr"
pipeline = ["normalizer", "sentencizer", "embedding", "ner"]
batch_size = 2
components = ${components}
tokenizer = {"@tokenizers": "eds.tokenizer"}

[components.normalizer]
@factory = "eds.normalizer"

[components.sentencizer]
@factory = "eds.sentences"

[components.embedding]
@factory = "eds.text_cnn"
kernel_sizes = [3]

[components.embedding.embedding]
@factory = "eds.transformer"
model = "hf-internal-testing/tiny-bert"
window = 128
stride = 96

[components.ner]
@factory = "eds.ner"
mode = "joint"
embedding = ${components.embedding}
target_span_getter = {"span_groups": ${vars.ml_span_groups}}
to_ents = true

[nlp.scorers.speed]
@scorers = "eds.speed"

[nlp.scorers.ner]
@scorers = "eds.ner_exact_scorer"
span_getter = ${components.ner.target_span_getter}

[vars]
train = "dataset"
dev = "dataset"
ml_span_groups = ["ENTITY", "OTHER"]

[train]
nlp = ${nlp}
train_data = {"@misc": "brat_dataset", "path": ${vars.train}}
val_data = {"@misc": "brat_dataset", "path": ${vars.dev}}
max_steps = 20
validation_interval = 1
batch_size = 4
lr = 3e-3
